---
- name: Frontend Server
  hosts: frontend_group
  tasks:
    - name: Grafana APT repository
      ansible.builtin.yum_repository:
        name: grafana
        description: Grafana repository
        file: grafana_repo
        baseurl: https://rpm.grafana.com
        gpgkey: https://rpm.grafana.com/gpg.key
        enabled: true
        gpgcheck: true
        repo_gpgcheck: true
        sslverify: true
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt

    - name: Install YUM packages
      ansible.builtin.yum:
        name:
          - grafana
          - python3-pip
          - httpd
        state: present

    - name: Install required pip packages
      ansible.builtin.pip:
        name:
          - requests
          - influxdb
          - flask

    - name: Copy Grafana configuration file
      ansible.builtin.copy:
        src: templates/frontend/grafana.j2
        dest: /etc/grafana/grafana.ini
        owner: root
        group: root
        mode: '0644'

    - name: Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        state: restarted
        enabled: true

    - name: Set default admin credentials
      ansible.builtin.command:
        cmd: grafana-cli --homepath "/usr/share/grafana" admin reset-admin-password {{ grafana_password }}
        creates: /home/ansible/.grafana_admin_password

    - name: Create influxdb datasource
      community.grafana.grafana_datasource:
        name: "datasource-influxdb"
        grafana_url: "http://{{ ansible_host }}:3000/"
        grafana_user: "{{ grafana_username }}"
        grafana_password: "{{ grafana_password }}"
        org_id: "1"
        ds_type: "influxdb"
        ds_url: "http://{{ hostvars['influxdb']['ansible_host'] }}:8086"
        database: "afs_store"
        time_interval: ">10s"
        validate_certs: false
      register: ds

    - name: Create dashboard directory
      ansible.builtin.file:
        path: /home/ansible/dashboards/
        state: directory
        owner: ansible
        group: ansible
        mode: '0755'

    - name: Render NFS dashboard
      ansible.builtin.template:
        src: templates/dashboards/nfs-dashboard.j2
        dest: /home/ansible/dashboards/nfs-dashboard.json
        owner: ansible
        group: ansible
        mode: '0644'

    - name: Import Grafana dashboard NFS
      community.grafana.grafana_dashboard:
        grafana_url: "http://{{ ansible_host }}:3000/"
        grafana_user: "{{ grafana_username }}"
        grafana_password: "{{ grafana_password }}"
        state: present
        commit_message: Updated by ansible
        overwrite: true
        path: /home/ansible/dashboards/nfs-dashboard.json
      tags: "dashboard"

    - name: Create frontend app directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
        recurse: true
      with_items:
        - "{{ dest_path_frontend }}"
      tags: frontend

    - name: Copy the frontend application
      ansible.builtin.copy:
        src: "{{ local_path_frontend }}"
        dest: "{{ dest_path_frontend }}"
        owner: root
        group: root
        mode: '0755'
      tags: frontend

    - name: Generate and copy db_cfg.json
      ansible.builtin.template:
        src: templates/influxdb/influxdb_conf.j2
        dest: '{{ dest_path_frontend }}/frontend/etc/db_cfg.json'
        owner: root
        group: root
        mode: '0755'
      vars:
        - influxdb_host: "{{ hostvars['influxdb']['ansible_host'] }}"
      tags: frontend

    - name: Create systemd service script
      ansible.builtin.template:
        src: templates/frontend/pafs.service.j2
        dest: /lib/systemd/system/pafs.service
        owner: root
        group: root
        mode: '0644'
      tags: frontend

    - name: PAFS service start
      ansible.builtin.systemd:
        name: pafs
        state: restarted
        enabled: true
      tags: frontend

    - name: Configure Apache to proxy requests to PAFS
      ansible.builtin.copy:
        src: templates/frontend/pafs.http.j2
        dest: /etc/httpd/conf.d/pafs.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart apache
      tags: frontend

    - name: Change the httpd_t domain to permissive
      community.general.selinux_permissive:
        name: httpd_t
        permissive: true
      tags: frontend

    - name: HTTP service start
      ansible.builtin.systemd:
        name: httpd
        state: restarted
        enabled: true
      tags: frontend
  post_tasks:
    - name: Print message at the end of playbook
      ansible.builtin.meta:
        end_play:
          msg: "\n\n====>>> Aplication deployed at http://{{ ansible_host }}/pafs/ <<<====\n\n"
